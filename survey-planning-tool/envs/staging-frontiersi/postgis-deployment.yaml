apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-postgres
  namespace: qa4mbes
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: db-postgres
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: db-postgres
    spec:
      containers:
        - image: mdillon/postgis:9.6
          imagePullPolicy: Always
          name: db-postgres
          env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: qa4mbes-secrets
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: qa4mbes-secrets
                key: POSTGRES_PASSWORD
          - name: POSTGRES_HOSTNAME
            value: "db-postgres"
          - name: POSTGRES_PORT
            value: "5432"
          - name: POSTGRES_DATABASE
            value: "postgres"
          - name: PGDATA
            value: "/var/lib/postgresql/db-data/pgdata"
          resources: {}
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/db-data
      restartPolicy: Always
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: db-postgres
  name: db-postgres
  namespace: qa4mbes
spec:
  ports:
   - port: 5432
  selector:
    app.kubernetes.io/name: db-postgres
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
  namespace: qa4mbes
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
