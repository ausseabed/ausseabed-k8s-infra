apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-alb
  namespace: qa4mbes
  labels:
    app: alb-to-www
  annotations:
    # Ingress Core Settings
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: instance
    # Health Check Settings
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-2:288871573946:certificate/29c84fdd-3a2c-4437-883c-6931e15ab634
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80,"HTTPS": 443}]'
    alb.ingress.kubernetes.io/auth-idp-cognito: '{"UserPoolArn":"arn:aws:cognito-idp:ap-southeast-2:288871573946:userpool/ap-southeast-2_3PyPaIa68", "UserPoolClientId":"vepvotchsrgjs0ji1m8oho434", "UserPoolDomain":"https://ausseabed-nonprod.auth.ap-southeast-2.amazoncognito.com"}'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}' 
    # alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
    # alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /
    # alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    # alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    # alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    # alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
spec:
  tls:
  - hosts:
    - sct.dev.ausseabed.gov.au
  rules:
  - host: sct.dev.ausseabed.gov.au
    http:
      paths:
        - path: /*
          backend:
            serviceName: www
            servicePort: 80